import{_ as e,c as a,o as i,b as l}from"./app.def054cb.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"编译如下：","slug":"编译如下","link":"#编译如下","children":[]},{"level":2,"title":"注意需要以 -O0编译","slug":"注意需要以-o0编译","link":"#注意需要以-o0编译","children":[]},{"level":2,"title":"-fsanitize=hwaddress","slug":"fsanitize-hwaddress","link":"#fsanitize-hwaddress","children":[]}],"relativePath":"tools/optimize/addresssanitizer/README.md"}'),r={name:"tools/optimize/addresssanitizer/README.md"},t=l(`<h2 id="编译如下" tabindex="-1">编译如下： <a class="header-anchor" href="#编译如下" aria-hidden="true">#</a></h2><pre><code>gcc -fsanitize=address -fno-omit-frame-pointer -O0 ./global-buffer-overflow.c
</code></pre><h2 id="注意需要以-o0编译" tabindex="-1">注意需要以 -O0编译 <a class="header-anchor" href="#注意需要以-o0编译" aria-hidden="true">#</a></h2><h2 id="fsanitize-hwaddress" tabindex="-1">-fsanitize=hwaddress <a class="header-anchor" href="#fsanitize-hwaddress" aria-hidden="true">#</a></h2><p>目前理解：</p><ol><li>gcc需要11之后才可以支持</li><li>如果使用ndk中的clang编译，提示没有 <ul><li>ld: error: cannot open toolchains/llvm/prebuilt/linux-x86_64/lib64/clang/12.0.8/lib/linux/libclang_rt.hwasan-x86_64.a: No such file or directory</li><li>ld: error: cannot open toolchains/llvm/prebuilt/linux-x86_64/lib64/clang/12.0.8/lib/linux/libclang_rt.hwasan_cxx-x86_64.a: No such file or directory</li></ul></li><li>如果使用ndk中的arm64平台clang编译可以成功，所以是否是只有aarch64目前提供了支持</li></ol>`,6),n=[t];function s(o,d,c,h,_,f){return i(),a("div",null,n)}const x=e(r,[["render",s]]);export{u as __pageData,x as default};

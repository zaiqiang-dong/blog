import{_ as r,r as d,o,c as l,d as e,e as t,a as s,w as h,b as a}from"./app.eb15f2ed.js";const _="/assets/2021-05-26_15-54.a54368ba.png",p="/assets/addr-yimaqi.d018c582.png",O=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 硬件的样子","slug":"_1-硬件的样子","link":"#_1-硬件的样子","children":[]},{"level":2,"title":"2. 地址空间的形成","slug":"_2-地址空间的形成","link":"#_2-地址空间的形成","children":[]},{"level":2,"title":"3. 编址方式","slug":"_3-编址方式","link":"#_3-编址方式","children":[{"level":3,"title":"3.1 统一编址","slug":"_3-1-统一编址","link":"#_3-1-统一编址","children":[]},{"level":3,"title":"3.2 独立编址","slug":"_3-2-独立编址","link":"#_3-2-独立编址","children":[]}]},{"level":2,"title":"4. 地址空间的划分","slug":"_4-地址空间的划分","link":"#_4-地址空间的划分","children":[{"level":3,"title":"4.1 通过硬连线来划分","slug":"_4-1-通过硬连线来划分","link":"#_4-1-通过硬连线来划分","children":[]},{"level":3,"title":"4.2 通过软件来划分","slug":"_4-2-通过软件来划分","link":"#_4-2-通过软件来划分","children":[]}]},{"level":2,"title":"5. 小结","slug":"_5-小结","link":"#_5-小结","children":[]}],"relativePath":"hardware/addressSpace/common/intro/intro.md"}'),T={name:"hardware/addressSpace/common/intro/intro.md"},m=a("",7),u=e("img",{src:p,alt:"add-yimaqi",title:"yimaqi"},null,-1),Q=e("code",null,"A0",-1),g=e("code",null,"A1",-1),x=e("code",null,"0",-1),b=e("code",null,"1",-1),f={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},w={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.242ex",height:"2.072ex",role:"img",focusable:"false",viewBox:"0 -833.9 2759 915.9","aria-hidden":"true"},k=a("",1),v=[k],V=e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msup",null,[e("mi",null,"n"),e("mn",null,"2")]),e("mo",null,"−"),e("mn",null,"1")],-1),C=a("",17);function I(c,S,P,y,A,H){const i=d("mjx-assistive-mml"),n=d("Vssue");return o(),l("div",null,[m,e("p",null,[t("如果你有数字逻辑电路的知识，应该很好理解地址的形成,如下图所示： "),u,t(" 上图是一个简易的存储器芯片的译码器部分，这个存储器可以存储4个字节的数据,那个需要的地址线就是两根"),Q,t(","),g,t(",原因也很好理解，每个根地址线可以有两种状态，高电平和低电平，对应表示"),x,t("，"),b,t(",那个两根地址线组合之后会有4种状态，所以可以选择读取或者写入4个字节的数据。 从上面的这个简易的存储器我们就可以得到地址空间的概念，也就是所有的地址线的排列组合，也就从0到"),e("mjx-container",f,[(o(),l("svg",w,v)),s(i,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:h(()=>[V]),_:1})]),t("。这个空间和外围挂载多少设备，什么样的设备没有任何关系，它就是一个CPU可以寻址的范围。")]),C,s(n,{title:c.$title},null,8,["title"])])}const L=r(T,[["render",I]]);export{O as __pageData,L as default};
